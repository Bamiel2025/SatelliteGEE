#!/usr/bin/env python3
"""
Script pour tester la validit√© d'une cl√© de service account Google Earth Engine
"""
import os
import json
import base64
import sys
from dotenv import load_dotenv

# Charger les variables d'environnement
load_dotenv()

def test_gee_key():
    print("=== Test de la Cl√© Google Earth Engine ===\n")

    # R√©cup√©rer les variables d'environnement
    project_id = os.environ.get('GEE_PROJECT_ID')
    service_account_key = os.environ.get('GEE_SERVICE_ACCOUNT_KEY')
    service_account_key_b64 = os.environ.get('GEE_SERVICE_ACCOUNT_KEY_B64')

    print(f"Project ID: {project_id}")
    print(f"Service Account Key pr√©sent: {bool(service_account_key)}")
    print(f"Service Account Key B64 pr√©sent: {bool(service_account_key_b64)}")
    print()

    if not project_id:
        print("‚ùå Erreur: GEE_PROJECT_ID n'est pas d√©fini")
        return False

    if not service_account_key and not service_account_key_b64:
        print("‚ùå Erreur: Aucune cl√© de service account trouv√©e")
        print("D√©finissez GEE_SERVICE_ACCOUNT_KEY ou GEE_SERVICE_ACCOUNT_KEY_B64")
        return False

    try:
        # Importer les modules n√©cessaires
        print("üîÑ Import des modules GEE...")
        import ee
        from google.oauth2 import service_account
        print("‚úÖ Modules import√©s avec succ√®s")
        print()

        # Pr√©parer la cl√©
        if service_account_key_b64:
            print("üîÑ D√©codage de la cl√© base64...")
            try:
                key_json = base64.b64decode(service_account_key_b64).decode('utf-8')
                print("‚úÖ Cl√© d√©cod√©e avec succ√®s")
            except Exception as e:
                print(f"‚ùå Erreur de d√©codage base64: {e}")
                return False
        else:
            key_json = service_account_key

        # Parser le JSON
        print("üîÑ Analyse du JSON de la cl√©...")
        try:
            key_data = json.loads(key_json)
            print("‚úÖ JSON analys√© avec succ√®s")
            print(f"   Service Account: {key_data.get('client_email', 'N/A')}")
            print(f"   Project ID: {key_data.get('project_id', 'N/A')}")
        except Exception as e:
            print(f"‚ùå Erreur d'analyse JSON: {e}")
            return False

        print()

        # Cr√©er les credentials
        print("üîÑ Cr√©ation des credentials...")
        try:
            credentials = service_account.Credentials.from_service_account_info(key_data)
            print("‚úÖ Credentials cr√©√©s avec succ√®s")
        except Exception as e:
            print(f"‚ùå Erreur de cr√©ation des credentials: {e}")
            return False

        print()

        # Tester l'initialisation GEE
        print("üîÑ Test d'initialisation Google Earth Engine...")
        try:
            ee.Initialize(credentials, project=project_id)
            print("‚úÖ Google Earth Engine initialis√© avec succ√®s !")
            print()

            # Test simple d'une op√©ration GEE
            print("üîÑ Test d'une op√©ration GEE simple...")
            collection = ee.ImageCollection("LANDSAT/LC08/C02/T1_L2")
            count = collection.size().getInfo()
            print(f"‚úÖ Test r√©ussi - Collection Landsat contient {count} images")

            print()
            print("üéâ SUCC√àS TOTAL !")
            print("Votre cl√© de service account GEE est valide et fonctionnelle.")
            return True

        except Exception as e:
            print(f"‚ùå Erreur d'initialisation GEE: {e}")
            if "invalid_scope" in str(e).lower():
                print("üí° Cette erreur indique souvent que la cl√© a expir√© ou que les permissions sont insuffisantes.")
            return False

    except ImportError as e:
        print(f"‚ùå Erreur d'import: {e}")
        print("Assurez-vous que google-auth et earthengine-api sont install√©s:")
        print("pip install google-auth earthengine-api")
        return False
    except Exception as e:
        print(f"‚ùå Erreur inattendue: {e}")
        return False

if __name__ == "__main__":
    success = test_gee_key()
    sys.exit(0 if success else 1)